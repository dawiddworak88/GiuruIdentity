<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountCreated" xml:space="preserve">
    <value>Account created successfully</value>
  </data>
  <data name="AccountText" xml:space="preserve">
    <value>Create account</value>
  </data>
  <data name="BackToRoles" xml:space="preserve">
    <value>Back to roles</value>
  </data>
  <data name="ApplicationDeletedSuccessfully" xml:space="preserve">
    <value>Successfully deleted customer application</value>
  </data>
  <data name="BackToClientsApplications" xml:space="preserve">
    <value>Back to clients applications</value>
  </data>
  <data name="Client" xml:space="preserve">
    <value>Client</value>
  </data>
  <data name="ClientAlreadyExists" xml:space="preserve">
    <value>User with this e-mail address has been already created.</value>
  </data>
  <data name="ClientApplicationNotFound" xml:space="preserve">
    <value>Customer application not found</value>
  </data>
  <data name="ClientApplicationSavedSuccessfully" xml:space="preserve">
    <value>Successfully saved client application</value>
  </data>
  <data name="ClientApplyConfirmation" xml:space="preserve">
    <value>Thank you for registering on our B2B platform. Your application has been sent and is waiting for verification by our team. We will notify you by e-mail about activating the account.</value>
  </data>
  <data name="ClientApplyConfirmationSubject" xml:space="preserve">
    <value>Confirmation of sending the request for cooperation.</value>
  </data>
  <data name="ClientApplySubject" xml:space="preserve">
    <value>New cooperation request</value>
  </data>
  <data name="ClientDeletedSuccessfully" xml:space="preserve">
    <value>Client has been deleted successfully.</value>
  </data>
  <data name="ClientExists" xml:space="preserve">
    <value>A customer with this e-mail address already exists.</value>
  </data>
  <data name="ClientManagers" xml:space="preserve">
    <value>Client account managers</value>
  </data>
  <data name="ClientNotFound" xml:space="preserve">
    <value>Client has not been found.</value>
  </data>
  <data name="Clients" xml:space="preserve">
    <value>Clients</value>
  </data>
  <data name="ClientsApplications" xml:space="preserve">
    <value>Clients applications</value>
  </data>
  <data name="ClientSavedSuccessfully" xml:space="preserve">
    <value>Client has been saved successfully.</value>
  </data>
  <data name="ClientsGroups" xml:space="preserve">
    <value>Clients groups</value>
  </data>
  <data name="ClientsRoles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="EditClient" xml:space="preserve">
    <value>Edit client</value>
  </data>
  <data name="EditClientRole" xml:space="preserve">
    <value>Edit role</value>
  </data>
  <data name="EditClientApplication" xml:space="preserve">
    <value>Edit client application</value>
  </data>
  <data name="EditClientManager" xml:space="preserve">
    <value>Edit client account manager</value>
  </data>
  <data name="EditGroup" xml:space="preserve">
    <value>Edit client group</value>
  </data>
  <data name="GroupDeleteClientConflict" xml:space="preserve">
    <value>Unassign clients from this group.</value>
  </data>
  <data name="GroupDeletedSuccessfully" xml:space="preserve">
    <value>Client group has been deleted successfully.</value>
  </data>
  <data name="GroupNotFound" xml:space="preserve">
    <value>Client group has not been found.</value>
  </data>
  <data name="GroupSavedSuccessfully" xml:space="preserve">
    <value>Client group has been saved successfully.</value>
  </data>
  <data name="ManagerDeleteConflict" xml:space="preserve">
    <value>Unassign clients from this account manager.</value>
  </data>
  <data name="ManagerDeletedSuccessfully" xml:space="preserve">
    <value>Account manager has been deleted successfully.</value>
  </data>
  <data name="ManagerExist" xml:space="preserve">
    <value>Account manager exist</value>
  </data>
  <data name="ManagerNotFound" xml:space="preserve">
    <value>Account manager has not been found.</value>
  </data>
  <data name="ManagerSavedSuccessfully" xml:space="preserve">
    <value>Account manager has been saved successfully.</value>
  </data>
  <data name="NavigateToClientsLabel" xml:space="preserve">
    <value>Back to clients</value>
  </data>
  <data name="NavigateToGroupsText" xml:space="preserve">
    <value>Back to groups</value>
  </data>
  <data name="NavigateToManagersText" xml:space="preserve">
    <value>Back to account managers</value>
  </data>
  <data name="NewClient" xml:space="preserve">
    <value>New client</value>
  </data>
  <data name="NewClientApplication" xml:space="preserve">
    <value>Add application</value>
  </data>
  <data name="NewGroup" xml:space="preserve">
    <value>New client group</value>
  </data>
  <data name="NewManager" xml:space="preserve">
    <value>New account manager</value>
  </data>
  <data name="NoClients" xml:space="preserve">
    <value>No clients available</value>
  </data>
  <data name="NoGroupsText" xml:space="preserve">
    <value>No client groups available</value>
  </data>
  <data name="NoManagers" xml:space="preserve">
    <value>No account managers available</value>
  </data>
  <data name="ResetPasswordText" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="RoleDeletedSuccessfully" xml:space="preserve">
    <value>Successfully deleted role.</value>
  </data>
  <data name="RoleIsExisting" xml:space="preserve">
    <value>Role exist</value>
  </data>
  <data name="RoleNotFound" xml:space="preserve">
    <value>Role not found</value>
  </data>
  <data name="RoleSavedSuccessfully" xml:space="preserve">
    <value>Successfully saved role.</value>
  </data>
  <data name="CountryDeletedSuccessfully" xml:space="preserve">
    <value>Country deleted successfully.</value>
  </data>
  <data name="CountrySavedSuccessfully" xml:space="preserve">
    <value>Country saved successfully.</value>
  </data>
  <data name="EditCountry" xml:space="preserve">
    <value>Edit country</value>
  </data>
  <data name="NavigateToCountriesText" xml:space="preserve">
    <value>Back to countries</value>
  </data>
  <data name="NewCountry" xml:space="preserve">
    <value>Add country</value>
  </data>
  <data name="AddressDeleteDefaultConflict" xml:space="preserve">
    <value>The selected address is assigned as the default.</value>
  </data>
  <data name="ClientAddressNotFound" xml:space="preserve">
    <value>Client address not found.</value>
  </data>
  <data name="ClientDeleteAddressConflict" xml:space="preserve">
    <value>Delete the addresses assigned to this Client</value>
  </data>
  <data name="BackToAddresses" xml:space="preserve">
    <value>Back to addresses</value>
  </data>
  <data name="DeliveryAddress" xml:space="preserve">
    <value>Delivery address</value>
  </data>
  <data name="DeliveryAddressDeleteDefaultConflict" xml:space="preserve">
    <value>Delivery address cannot be deleted because it is assigned as default</value>
  </data>
  <data name="ClientAddressDeletedSuccessfully" xml:space="preserve">
    <value>Client address successfully deleted</value>
  </data>
  <data name="ClientAddressSavedSuccessfully" xml:space="preserve">
    <value>Client address successfully saved</value>
  </data>
  <data name="BillingAddress" xml:space="preserve">
    <value>Billing address</value>
  </data>
  <data name="BillingAddressDeleteDefaultConflict" xml:space="preserve">
    <value>Billing address cannot be deleted because it is assigned as the default address</value>
  </data>
  <data name="NewClientAddress" xml:space="preserve">
    <value>Add address</value>
  </data>
  <data name="PreferedCurrencyLabel" xml:space="preserve">
    <value>Prefered currency</value>
  </data>
</root>