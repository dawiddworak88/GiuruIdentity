apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-api-deployment
  labels:
    app: identity-api
spec:
  replicas: {{ .Values.identityApi.replicas }}
  selector:
    matchLabels:
      app: identity-api
  template:
    metadata:
      labels:
        app: identity-api
    spec:
      containers:
      - name: identity-api-container
        image: {{ .Values.image.registry }}/{{ .Values.image.identityApi.repository }}:{{ .Values.image.tag }}
        readinessProbe:
          httpGet:
            path: /hc
            port: 80
          initialDelaySeconds: {{ .Values.identityApi.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.identityApi.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.identityApi.readinessProbe.timeoutSeconds }}
        livenessProbe:
          httpGet:
            path: /liveness
            port: 80
          initialDelaySeconds: {{ .Values.identityApi.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.identityApi.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.identityApi.livenessProbe.timeoutSeconds }}
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: {{ .Values.environment }}
        - name: ServerSideRenderingEndpoint
          value: {{ .Values.serverSideRenderingEndpoint }}
        - name: CatalogUrl
          value: {{ .Values.catalogUrl }}
        - name: MediaUrl
          value: {{ .Values.mediaUrl }}
        - name: IdentityUrl
          value: {{ .Values.identityUrl }}
        - name: BuyerUrl
          value: {{ .Values.buyerUrl }}
        - name: PrivacyPolicy
          value: {{ .Values.identityApi.privacyPolicy }}
        - name: Regulations
          value: {{ .Values.identityApi.regulations }}
        - name: SenderEmail
          value: {{ .Values.senderEmail }}
        - name: ApplyRecipientEmail
          value: {{ .Values.applyRecipientEmail }}
        - name: DevelopersEmail
          value: {{ .Values.identityApi.developersEmail }}
        - name: SenderName
          value: {{ .Values.senderName }}
        - name: ActionSendGridCreateTemplateId
          value: {{ .Values.identityApi.actionSendGridCreateTemplateId }}
        - name: ActionSendGridResetTemplateId
          value: {{ .Values.identityApi.actionSendGridResetTemplateId }}
        - name: ActionSendGridTeamMemberInvitationTemplateId
          value: {{ .Values.identityApi.actionSendGridTeamMemberInvitationTemplateId }}
        - name: LogzIoType
          value: {{ .Values.logzIoType }}
        - name: LogzIoDataCenterSubDomain
          value: {{ .Values.logzIoDataCenterSubDomain }}
        - name: OpenTelemetryCollectorUrl
          value: {{ .Values.openTelemetryCollectorUrl }}
        - name: DefaultCulture
          value: {{ .Values.defaultCulture }}
        - name: SupportedCultures
          value: {{ .Values.supportedCultures }}
        envFrom:
        - secretRef:
            name: b2b-identity-api-secrets
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: account-web-react-ssr-deployment
  labels:
    app: account-web-react-ssr
spec:
  replicas: {{ .Values.accountWebReactSsr.replicas }}
  selector:
    matchLabels:
      app: account-web-react-ssr
  template:
    metadata:
      labels:
        app: account-web-react-ssr
    spec:
      containers:
      - name: account-web-react-ssr-container
        image: {{ .Values.image.registry }}/{{ .Values.image.accountWebReactSsr.repository }}:{{ .Values.image.tag }}
        env:
        - name: NODE_ENV
          value: {{ .Values.nodeEnvironment }}
        ports:
        - containerPort: 3000